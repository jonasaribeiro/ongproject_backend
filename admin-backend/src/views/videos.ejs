<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Video Streaming</title>
    <script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
  </head>
  <body>
    <h1>Streaming Video</h1>
    <video id="videoPlayer" controls></video>

    <script>
      // Extrair o ID do vídeo da URL
      const pathParts = window.location.pathname.split("/");
      const videoId = pathParts[pathParts.length - 1]; // Último elemento
      const videoPlayer = document.getElementById("videoPlayer");

      console.log("Video ID:", videoId);

      if (videoId) {
        // URL da playlist do vídeo
        const videoUrl = `/stream/${videoId}`;
        console.log("URL da playlist:", videoUrl);

        if (Hls.isSupported()) {
          const hls = new Hls();

          // Mapear as URLs dos segmentos
          hls.config.fLoader = function (config) {
            const originalLoader = Hls.DefaultConfig.loader;
            const loader = new originalLoader(config);
            const originalLoad = loader.load.bind(loader);

            loader.load = function (context, config, callbacks) {
              if (context.type === "level") {
                context.url = `/stream/${videoId}/${context.url
                  .split("/")
                  .pop()}`;
              }
              originalLoad(context, config, callbacks);
            };

            return loader;
          };

          hls.loadSource(videoUrl);
          hls.attachMedia(videoPlayer);
          hls.on(Hls.Events.MANIFEST_PARSED, function () {
            videoPlayer.play();
          });

          hls.on(Hls.Events.ERROR, function (event, data) {
            if (data.fatal) {
              switch (data.type) {
                case Hls.ErrorTypes.NETWORK_ERROR:
                  console.error("Network error encountered", data);
                  break;
                case Hls.ErrorTypes.MEDIA_ERROR:
                  console.error("Media error encountered", data);
                  break;
                default:
                  console.error("Other error encountered", data);
                  break;
              }
            }
          });
        } else if (videoPlayer.canPlayType("application/vnd.apple.mpegurl")) {
          videoPlayer.src = videoUrl;
          videoPlayer.addEventListener("loadedmetadata", function () {
            videoPlayer.play();
          });

          videoPlayer.addEventListener("error", function (event) {
            console.error("Erro no player:", event);
          });
        }
      } else {
        console.error("Video ID not found in URL path.");
      }
    </script>
  </body>
</html>
