version: '3.8'

services:
  admin-backend:
    build:
      context: ./admin-backend
      dockerfile: Dockerfile
    volumes:
      - ./admin-backend:/usr/src/app
      - video-storage:/usr/src/app/videos
    ports:
      - "3001:3001"
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/mydb
      - VIDEO_STORAGE_PATH=/usr/src/app/videos
      - TOKEN_EXPIRES_IN=7d
      - SECRET_KEY=SENHASECRETA
    command: sh -c "npm install && npm run dev"

  user-backend:
    build:
      context: ./user-backend
      dockerfile: Dockerfile
    volumes:
      - ./user-backend:/usr/src/app
      - video-storage:/usr/src/app/videos
    ports:
      - "3002:3002"
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/mydb
      - VIDEO_STORAGE_PATH=/usr/src/app/videos
      - TOKEN_EXPIRES_IN=7d
      - SECRET_KEY=SENHASECRETA
    command: sh -c "npm install && npm run dev"

  dev-editor:
    build:
      context: .
      dockerfile: Dockerfile.dev
    volumes:
      - ./admin-backend:/usr/src/admin-backend
      - ./user-backend:/usr/src/user-backend
    ports:
      - "3003:3003"  # Se precisar de uma porta para algum serviço de edição
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/mydb
    command: sh -c "tail -f /dev/null"  # Mantém o container rodando para edição

  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydb
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  db-data:
  video-storage:
    # external: true # Comentar linha para testes locais
